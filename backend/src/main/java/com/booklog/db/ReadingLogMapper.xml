<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booklog.db.ReadingLogMapper">

   <!-- 독서 상태에 따른 책과 독서 기록 조회 -->
   <select id="findMyLogs" parameterType="map"
      resultType="com.booklog.model.ReadingLogDTO">
      SELECT
      RL.LOG_IDX AS logIdx,
      RL.STATUS,
      RL.ST_DT AS startDate,
      RL.ED_DT AS endDate,
      RL.RATING,
      RL.CONTENT,

      B.TITLE,
      B.AUTHOR,
      B.GENRE,
      B.BOOK_IMG AS imgUrl

      FROM READING_LOG RL
      JOIN BOOK B ON RL.BOOK_IDX =
      B.BOOK_IDX
      WHERE RL.USER_ID
      = #{userId}
      AND RL.STATUS = #{status}
   </select>

   <!-- 태그 조회 -->
   <select id="findTagsByLogIdx" parameterType="int"
      resultType="string">
      SELECT T.TAG_NAME
      FROM READING_LOG_TAG RLT
      JOIN TAG T ON
      RLT.TAG_IDX = T.TAG_IDX
      WHERE RLT.LOG_IDX = #{logIdx}
   </select>

   <!-- 인용구 조회 -->
   <select id="findQuotesByLogIdx" parameterType="int"
      resultType="string">
      SELECT Q.CONTENT
      FROM QUOTE Q
      JOIN READING_LOG RL ON
      Q.BOOK_IDX = RL.BOOK_IDX
      WHERE RL.LOG_IDX = #{logIdx}
      AND Q.USER_ID =
      RL.USER_ID
   </select>

   <!-- 피드에서 독서 기록 조회 -->
   <select id="findLogs" parameterType="map"
      resultType="com.booklog.model.ReadingLogDTO">
      SELECT
      RL.LOG_IDX AS logIdx,
      USER_ID AS userId,
      RL.RATING,
      RL.CONTENT,
      RL.CREATED_AT AS createdAt,

      B.TITLE,
      B.AUTHOR,
      B.GENRE,
      B.BOOK_IMG AS
      imgUrl

      FROM READING_LOG RL
      JOIN BOOK B ON RL.BOOK_IDX =
      B.BOOK_IDX
      WHERE
      RL.USER_ID
      = #{userId}
      AND RL.LOG_IDX = #{logIdx}
   </select>

   <!-- 독서 기록에 달린 댓글 조회 -->
   <select id="findCommentsByLogIdx" parameterType="int"
      resultType="com.booklog.model.CommentDTO">
      SELECT
      COMMENT_IDX AS commentIdx,
      USER_ID AS userId,
      CONTENT,
      PARENT_IDX AS parentIdx,
      CREATED_AT
      AS createdAt,
      IS_DELETED AS isDeleted
      FROM COMMENT
      WHERE LOG_IDX = #{logIdx}
      ORDER BY CREATED_AT ASC
   </select>

   <!-- 독서 기록 추가 -->
   <insert id="insertLog"
      parameterType="com.booklog.model.ReadingLogDTO"
      useGeneratedKeys="true" keyProperty="logIdx">
      INSERT INTO READING_LOG
      (USER_ID, BOOK_IDX, STATUS, ST_DT, ED_DT, RATING, CONTENT, CREATED_AT)
      VALUES
      (#{userId}, #{bookIdx}, #{status}, #{startDate}, #{endDate}, #{rating},
      #{content}, NOW())
   </insert>
   


</mapper>